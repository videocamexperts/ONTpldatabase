<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Plate Database</title>
    <script src="https://apis.google.com/js/api.js"></script>
    <script src="https://accounts.google.com/gsi/client" async defer></script>
</head>
<body>
    <div class="container">
        <h1>Plate Database</h1>
        <button id="authorize-button" style="display: none;">Authorize</button>
        <button id="signout-button" style="display: none;">Sign Out</button>
        <form id="plate-form" style="display: none;">
            <div class="form-group">
                <label for="plate">Enter Plate:</label>
                <input type="text" id="plate" name="plate" required>
            </div>
            <button type="submit">Add to Database</button>
        </form>
    </div>

    <script>
        const CLIENT_ID = '985127607358-h7v88oa1u87e1gvaf2sgk387400i17v5.apps.googleusercontent.com'; // Replace with your OAuth 2.0 Client ID
        const SPREADSHEET_ID = '1q1iVK77p0MMEMfmPhOTViPMi812Szdqi8qhYtWVlMxI'; // Replace with your Spreadsheet ID
        const SCOPES = "https://www.googleapis.com/auth/spreadsheets";

        let tokenClient;
        let gapiInited = false;
        let gisInited = false;

        document.getElementById('authorize-button').onclick = handleAuthClick;
        document.getElementById('signout-button').onclick = handleSignoutClick;

        function gapiLoaded() {
            gapi.load('client', initializeGapiClient);
        }

        function gisLoaded() {
            tokenClient = google.accounts.oauth2.initTokenClient({
                client_id: CLIENT_ID,
                scope: SCOPES,
                callback: '', // defined later
            });
            gisInited = true;
            maybeEnableButtons();
        }

        function maybeEnableButtons() {
            if (gapiInited && gisInited) {
                document.getElementById('authorize-button').style.display = 'block';
            }
        }

        function initializeGapiClient() {
            gapi.client.init({
                discoveryDocs: ["https://sheets.googleapis.com/$discovery/rest?version=v4"],
            }).then(function () {
                gapiInited = true;
                maybeEnableButtons();
            }, function(error) {
                console.error('Error initializing GAPI client:', error);
            });
        }

        function handleAuthClick() {
            tokenClient.callback = async (resp) => {
                if (resp.error !== undefined) {
                    throw (resp);
                }
                document.getElementById('signout-button').style.display = 'block';
                document.getElementById('plate-form').style.display = 'block';
                document.getElementById('authorize-button').style.display = 'none';
            };

            if (gapi.client.getToken() === null) {
                tokenClient.requestAccessToken({prompt: 'consent'});
            } else {
                tokenClient.requestAccessToken({prompt: ''});
            }
        }

        function handleSignoutClick() {
            const token = gapi.client.getToken();
            if (token !== null) {
                google.accounts.oauth2.revoke(token.access_token);
                gapi.client.setToken('');
                document.getElementById('authorize-button').style.display = 'block';
                document.getElementById('signout-button').style.display = 'none';
                document.getElementById('plate-form').style.display = 'none';
            }
        }

        document.getElementById('plate-form').addEventListener('submit', function(event) {
            event.preventDefault();
            const plate = document.getElementById('plate').value.trim();
            if (plate) {
                addPlateToDatabase(plate);
            }
        });

        async function addPlateToDatabase(plate) {
            const params = {
                spreadsheetId: SPREADSHEET_ID,
                range: 'Sheet1!A2:A',
                valueInputOption: 'RAW',
            };

            const valueRangeBody = {
                "values": [
                    [plate]
                ]
            };

            try {
                const response = await gapi.client.sheets.spreadsheets.values.append(params, valueRangeBody);
                console.log('Plate added to Google Sheet:', response);
                document.getElementById('plate-form').reset();
            } catch (error) {
                console.error('Error:', error.result.error.message);
            }
        }

        gapi.load('client:auth2', gapiLoaded);
        window.onload = gisLoaded;
    </script>
</body>
</html>

